name: Deploy Frontend in ECR with Sonarqube Test

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Login to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build Docker image
    - name: Build Docker Image
      run: docker build -t consultancy:latest ./Frontendd

    # Tag Docker image for ECR
    - name: Tag Docker Image
      run: docker tag consultancy:latest 761018870862.dkr.ecr.us-east-1.amazonaws.com/consultancy:latest

    # Push Docker image to Amazon ECR
    - name: Push Docker Image to ECR
      run: docker push 761018870862.dkr.ecr.us-east-1.amazonaws.com/consultancy:latest

    # Authenticate Docker again for local container run (optional)
    - name: Authenticate Docker with ECR
      run: |
        aws ecr get-login-password --region us-east-1 | \
        docker login --username AWS --password-stdin 761018870862.dkr.ecr.us-east-1.amazonaws.com

    # Optionally pull the image to verify it is uploaded
    - name: Pull Docker Image from ECR
      run: docker pull 761018870862.dkr.ecr.us-east-1.amazonaws.com/consultancy:latest
    
    # Optionally run the container to ensure it works
    - name: Run Docker Container
      run: docker run -d --rm --name Frontend-web -p 3000:3000 761018870862.dkr.ecr.us-east-1.amazonaws.com/consultancy:latest
